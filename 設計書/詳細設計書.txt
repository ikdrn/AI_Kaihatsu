詳細設計書

1. フロントエンド詳細

1.1 各画面の詳細

## ログイン画面:
URL: /login
入力項目: メールアドレス、パスワード

## 新規登録画面:
URL: /register
入力項目: ユーザ名、メールアドレス、パスワード

## メイン画面:
URL: /main
機能リンク: 見積作成、履歴参照

## 見積画面:
URL: /estimate
入力フォーム: 要件（目的、概要、予算、納期）
提案表示: 提案内容、デザイン選択インターフェース


## 過去見積画面:
URL: /history
表示データ: 見積履歴一覧
検索機能: 日付や予算でフィルタリング

1.2 使用技術

HTML/CSS
(htmlファイルに<SCRIPT>タグにReact内包)
GO(フレームワークgin)

2. バックエンド詳細

履歴管理: Googleスプレッドシートからデータ取得。
エラー: 入力内容のエラー。
入力内容: AIから入力内容を提示する。
API Key: AIzaSyDzzFJHOufbGMSBAUg6OFoUCllv_IuY5sw

4. データベース設計
1. Youkenシート（要件管理）
目的: クライアントが入力した要件を管理。
構成:
A列: 要件ID (REQUID) - 自動生成、一意
B列: 目的 (GAIYOU) - クライアントの入力内容
C列: 予算 (YOSANN) - クライアントの入力内容（整数値）
D列: 納期 (KNOUKI) - クライアントの入力内容
E列: 作成日時 (SAKSEI) - 自動記録

2. Teianシート（提案管理）
目的: 要件に基づく提案内容を管理。
構成:
A列: 提案ID (TIANID) - 自動生成、一意
B列: 要件ID (REQUID) - Youkenシートとの紐づけ
C列: 機能リスト (KNLIST) - JSON形式で格納
D列: デザインIDリスト (DGLIST) - 提案されたデザインのIDリスト
E列: 工数見積 (RSURCE) - 工数（整数値、時間単位）
F列: 納期見積 (JNOUKI) - 算出された納期

3. Designsシート（デザイン管理）
目的: 提案可能なデザイン情報を管理。
構成:
A列: デザインID (DGLIST) - 自動生成、一意
B列: デザイン名 (DGNAME) - 例: "シンプルUI", "リッチUI"
C列: デザイン詳細 (DGDTAI) - JSON形式で構造を格納
D列: 工数基準値 (DGKOSU) - このデザインに必要な基準工数

4. Userシート（ユーザー管理）
目的: クライアント情報を管理。
構成:
A列: ユーザーID (USERID) - 自動生成、一意
B列: ユーザー名 (USERNM)
C列: メールアドレス (USERML)
D列: 登録日時 (USERDT)

5. 非機能要件
レスポンス性能: 提案生成は5秒以内。
セキュリティ: HTTPSで通信を暗号化。
可用性: サーバのダウンタイムは月間1時間以内を目指す。

6. ユーザーフロー
クライアントが要件入力フォームに必要事項を記入し送信。
Googleスプレッドシートにデータが保存される。
バックエンドで要件解析が行われ、提案データが生成される。
クライアントは提案内容を確認し、デザインを選択。
選択デザインに基づき、工数と納期が計算され、クライアントに提示。

7.ディレクトリ構造
AiMitz/
├── frontend/
│   ├── login.html
│   ├── register.html
│   ├── main.html
│   ├── estimate.html
│   ├── history.html
│   ├── assets/
│   │   ├── css/
│   │   │   ├── style.css
│   │   ├── js/
│   │   │   ├── main.js
│   │   └── images/
├── backend/
│   ├── main.go
│   ├── handlers/
│   │   ├── auth.go
│   │   ├── estimate.go
│   │   └── history.go
│   ├── models/
│   │   ├── user.go
│   │   ├── requirement.go
│   │   └── proposal.go
│   ├── services/
│   │   ├── ai_service.go
│   │   └── spreadsheet_service.go
│   ├── utils/
│   │   ├── config.go
│   │   └── helpers.go
│   └── go.mod
├── README.md
└── .gitignore